#!/usr/bin/env python
PACKAGE = "path_planner"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("planner_geotiff_map", str_t, 0, "Path to GeoTIFF map for planner", "")
gen.add("non_coverage_turning_radius", double_t, 0, "Turning radius of the vessel (meters)", 8, 1, 100)
gen.add("coverage_turning_radius", double_t, 0, "Turning radius acceptable during sonar operation (meters)", 16, 1, 100)
gen.add("max_speed", double_t, 0, "Maximum speed of the vessel (meters/second)", 2.5, 0, 30)
gen.add("line_width", double_t, 0, "Acceptable across-track distance from survey line (m)", 2, 0.05, 10)
gen.add("branching_factor", int_t, 0, "Branching factor for connecting samples (doubled for coverage/non-coverage modes)", 9, 1, 50)
gen.add("time_horizon", double_t, 0, "Planning time horizon (s)", 30, 5, 600)
gen.add("time_minimum", double_t, 0, "Minimum trajectory duration (s)", 5, 5, 60)
gen.add("collision_checking_increment", double_t, 0, "Increment at which collision checking is done (m)", 0.25, 0.01, 10)
gen.add("initial_samples", int_t, 0, "Initial number of samples for planning", 100, 10, 1000)
gen.add("use_brown_paths", bool_t, 0, "Whether to be clever about getting onto a ribbon with some hand-picked curves", False)
gen.add("dump_visualization", bool_t, 0, "Toggle visualization info dump", False)
gen.add("visualization_file", str_t, 0, "Visualization file", "/tmp/planner_visualization")

heuristic_enum = gen.enum([
    gen.const("TspPointRobotNoSplitAllRibbons", int_t, 0, "TSP point robot no split all ribbons"),
    gen.const("TspPointRobotNoSplitKRibbons", int_t, 1, "TSP point robot no split K ribbons"),
    gen.const("MaxDistance", int_t, 2, "Max distance"),
    gen.const("TspDubinsNoSplitAllRibbons", int_t, 3, "TSP Dubins no split all ribbons"),
    gen.const("TspDubinsNoSplitKRibbons", int_t, 4, "TSP Dubins no split K ribbons")
                           ],
                          "Heuristic to use.")
gen.add("heuristic", int_t, 0, "Heuristic to use", 0, 0, 4, edit_method=heuristic_enum)

exit(gen.generate(PACKAGE, "path_planner", "path_planner"))
